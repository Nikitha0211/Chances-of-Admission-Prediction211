{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6e59706a",
   "metadata": {
    "papermill": {
     "duration": 0.008634,
     "end_time": "2024-06-27T17:25:32.329645",
     "exception": false,
     "start_time": "2024-06-27T17:25:32.321011",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Chance of Admission for Higher Studies**\n",
    "Predict the chances of admission of a student to a Graduate program based on:\n",
    "\n",
    "GRE Scores (290 to 340)\n",
    "\n",
    "TOEFL Scores (92 to 120)\n",
    "\n",
    "University Rating (1 to 5)\n",
    "\n",
    "Statement of Purpose (1 to 5)\n",
    "\n",
    "Letter of Recommendation Strength (1 to 5)\n",
    "\n",
    "Undergraduate CGPA (6.8 to 9.92)\n",
    "\n",
    "Research Experience (0 or 1)\n",
    "\n",
    "Chance of Admit (0.34 to 0.97)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "28879b9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:32.347888Z",
     "iopub.status.busy": "2024-06-27T17:25:32.347351Z",
     "iopub.status.idle": "2024-06-27T17:25:33.561602Z",
     "shell.execute_reply": "2024-06-27T17:25:33.560234Z"
    },
    "papermill": {
     "duration": 1.226736,
     "end_time": "2024-06-27T17:25:33.564832",
     "exception": false,
     "start_time": "2024-06-27T17:25:32.338096",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 1 : import library\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "26d26c95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.585073Z",
     "iopub.status.busy": "2024-06-27T17:25:33.584411Z",
     "iopub.status.idle": "2024-06-27T17:25:33.612016Z",
     "shell.execute_reply": "2024-06-27T17:25:33.610594Z"
    },
    "papermill": {
     "duration": 0.04159,
     "end_time": "2024-06-27T17:25:33.615177",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.573587",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 2 : import data\n",
    "admission = pd.read_csv('/kaggle/input/admission-precdiction-dataset/Admission_Prediction_dataset.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "de439c20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.633183Z",
     "iopub.status.busy": "2024-06-27T17:25:33.632718Z",
     "iopub.status.idle": "2024-06-27T17:25:33.665569Z",
     "shell.execute_reply": "2024-06-27T17:25:33.664218Z"
    },
    "papermill": {
     "duration": 0.045329,
     "end_time": "2024-06-27T17:25:33.668537",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.623208",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Serial No</th>\n",
       "      <th>GRE Score</th>\n",
       "      <th>TOEFL Score</th>\n",
       "      <th>University Rating</th>\n",
       "      <th>SOP</th>\n",
       "      <th>LOR</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Research</th>\n",
       "      <th>Chance of Admit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>337</td>\n",
       "      <td>118</td>\n",
       "      <td>4</td>\n",
       "      <td>4.5</td>\n",
       "      <td>4.5</td>\n",
       "      <td>9.65</td>\n",
       "      <td>1</td>\n",
       "      <td>0.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>324</td>\n",
       "      <td>107</td>\n",
       "      <td>4</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.5</td>\n",
       "      <td>8.87</td>\n",
       "      <td>1</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>316</td>\n",
       "      <td>104</td>\n",
       "      <td>3</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>8.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>322</td>\n",
       "      <td>110</td>\n",
       "      <td>3</td>\n",
       "      <td>3.5</td>\n",
       "      <td>2.5</td>\n",
       "      <td>8.67</td>\n",
       "      <td>1</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>314</td>\n",
       "      <td>103</td>\n",
       "      <td>2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>8.21</td>\n",
       "      <td>0</td>\n",
       "      <td>0.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Serial No  GRE Score  TOEFL Score  University Rating   SOP  LOR   CGPA  \\\n",
       "0          1        337          118                  4   4.5   4.5  9.65   \n",
       "1          2        324          107                  4   4.0   4.5  8.87   \n",
       "2          3        316          104                  3   3.0   3.5  8.00   \n",
       "3          4        322          110                  3   3.5   2.5  8.67   \n",
       "4          5        314          103                  2   2.0   3.0  8.21   \n",
       "\n",
       "   Research  Chance of Admit   \n",
       "0         1              0.92  \n",
       "1         1              0.76  \n",
       "2         1              0.72  \n",
       "3         1              0.80  \n",
       "4         0              0.65  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "admission.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "38584d41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.688142Z",
     "iopub.status.busy": "2024-06-27T17:25:33.687727Z",
     "iopub.status.idle": "2024-06-27T17:25:33.715003Z",
     "shell.execute_reply": "2024-06-27T17:25:33.713391Z"
    },
    "papermill": {
     "duration": 0.040736,
     "end_time": "2024-06-27T17:25:33.718449",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.677713",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 400 entries, 0 to 399\n",
      "Data columns (total 9 columns):\n",
      " #   Column             Non-Null Count  Dtype  \n",
      "---  ------             --------------  -----  \n",
      " 0   Serial No          400 non-null    int64  \n",
      " 1   GRE Score          400 non-null    int64  \n",
      " 2   TOEFL Score        400 non-null    int64  \n",
      " 3   University Rating  400 non-null    int64  \n",
      " 4    SOP               400 non-null    float64\n",
      " 5   LOR                400 non-null    float64\n",
      " 6   CGPA               400 non-null    float64\n",
      " 7   Research           400 non-null    int64  \n",
      " 8   Chance of Admit    400 non-null    float64\n",
      "dtypes: float64(4), int64(5)\n",
      "memory usage: 28.2 KB\n"
     ]
    }
   ],
   "source": [
    "admission.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "88c6baa4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.736644Z",
     "iopub.status.busy": "2024-06-27T17:25:33.736258Z",
     "iopub.status.idle": "2024-06-27T17:25:33.781658Z",
     "shell.execute_reply": "2024-06-27T17:25:33.780180Z"
    },
    "papermill": {
     "duration": 0.05803,
     "end_time": "2024-06-27T17:25:33.784735",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.726705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Serial No</th>\n",
       "      <th>GRE Score</th>\n",
       "      <th>TOEFL Score</th>\n",
       "      <th>University Rating</th>\n",
       "      <th>SOP</th>\n",
       "      <th>LOR</th>\n",
       "      <th>CGPA</th>\n",
       "      <th>Research</th>\n",
       "      <th>Chance of Admit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>200.500000</td>\n",
       "      <td>316.807500</td>\n",
       "      <td>107.410000</td>\n",
       "      <td>3.087500</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>3.452500</td>\n",
       "      <td>8.598925</td>\n",
       "      <td>0.547500</td>\n",
       "      <td>0.724350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>115.614301</td>\n",
       "      <td>11.473646</td>\n",
       "      <td>6.069514</td>\n",
       "      <td>1.143728</td>\n",
       "      <td>1.006869</td>\n",
       "      <td>0.898478</td>\n",
       "      <td>0.596317</td>\n",
       "      <td>0.498362</td>\n",
       "      <td>0.142609</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>290.000000</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.340000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>100.750000</td>\n",
       "      <td>308.000000</td>\n",
       "      <td>103.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>8.170000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.640000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>200.500000</td>\n",
       "      <td>317.000000</td>\n",
       "      <td>107.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>8.610000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.730000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>300.250000</td>\n",
       "      <td>325.000000</td>\n",
       "      <td>112.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>9.062500</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.830000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>400.000000</td>\n",
       "      <td>340.000000</td>\n",
       "      <td>120.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>9.920000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.970000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Serial No   GRE Score  TOEFL Score  University Rating         SOP  \\\n",
       "count  400.000000  400.000000   400.000000         400.000000  400.000000   \n",
       "mean   200.500000  316.807500   107.410000           3.087500    3.400000   \n",
       "std    115.614301   11.473646     6.069514           1.143728    1.006869   \n",
       "min      1.000000  290.000000    92.000000           1.000000    1.000000   \n",
       "25%    100.750000  308.000000   103.000000           2.000000    2.500000   \n",
       "50%    200.500000  317.000000   107.000000           3.000000    3.500000   \n",
       "75%    300.250000  325.000000   112.000000           4.000000    4.000000   \n",
       "max    400.000000  340.000000   120.000000           5.000000    5.000000   \n",
       "\n",
       "             LOR         CGPA    Research  Chance of Admit   \n",
       "count  400.000000  400.000000  400.000000        400.000000  \n",
       "mean     3.452500    8.598925    0.547500          0.724350  \n",
       "std      0.898478    0.596317    0.498362          0.142609  \n",
       "min      1.000000    6.800000    0.000000          0.340000  \n",
       "25%      3.000000    8.170000    0.000000          0.640000  \n",
       "50%      3.500000    8.610000    1.000000          0.730000  \n",
       "75%      4.000000    9.062500    1.000000          0.830000  \n",
       "max      5.000000    9.920000    1.000000          0.970000  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "admission.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ad020194",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.805913Z",
     "iopub.status.busy": "2024-06-27T17:25:33.805364Z",
     "iopub.status.idle": "2024-06-27T17:25:33.812171Z",
     "shell.execute_reply": "2024-06-27T17:25:33.810612Z"
    },
    "papermill": {
     "duration": 0.021307,
     "end_time": "2024-06-27T17:25:33.815041",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.793734",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 3 : define target (y) and features (X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1d25d6af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.835449Z",
     "iopub.status.busy": "2024-06-27T17:25:33.834000Z",
     "iopub.status.idle": "2024-06-27T17:25:33.843138Z",
     "shell.execute_reply": "2024-06-27T17:25:33.841682Z"
    },
    "papermill": {
     "duration": 0.021875,
     "end_time": "2024-06-27T17:25:33.845858",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.823983",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Serial No', 'GRE Score', 'TOEFL Score', 'University Rating', ' SOP',\n",
       "       'LOR ', 'CGPA', 'Research', 'Chance of Admit '],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "admission.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7c20197a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.867564Z",
     "iopub.status.busy": "2024-06-27T17:25:33.867141Z",
     "iopub.status.idle": "2024-06-27T17:25:33.873091Z",
     "shell.execute_reply": "2024-06-27T17:25:33.871695Z"
    },
    "papermill": {
     "duration": 0.019558,
     "end_time": "2024-06-27T17:25:33.875919",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.856361",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y = admission['Chance of Admit ']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "87dbf8db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.895538Z",
     "iopub.status.busy": "2024-06-27T17:25:33.895108Z",
     "iopub.status.idle": "2024-06-27T17:25:33.904244Z",
     "shell.execute_reply": "2024-06-27T17:25:33.902765Z"
    },
    "papermill": {
     "duration": 0.022211,
     "end_time": "2024-06-27T17:25:33.907072",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.884861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = admission.drop(['Serial No','Chance of Admit '],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "aca02541",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:33.926724Z",
     "iopub.status.busy": "2024-06-27T17:25:33.926230Z",
     "iopub.status.idle": "2024-06-27T17:25:35.819603Z",
     "shell.execute_reply": "2024-06-27T17:25:35.817956Z"
    },
    "papermill": {
     "duration": 1.907414,
     "end_time": "2024-06-27T17:25:35.823366",
     "exception": false,
     "start_time": "2024-06-27T17:25:33.915952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 4 : train test split\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "265e12f6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:35.845857Z",
     "iopub.status.busy": "2024-06-27T17:25:35.845396Z",
     "iopub.status.idle": "2024-06-27T17:25:35.855845Z",
     "shell.execute_reply": "2024-06-27T17:25:35.854043Z"
    },
    "papermill": {
     "duration": 0.025454,
     "end_time": "2024-06-27T17:25:35.859230",
     "exception": false,
     "start_time": "2024-06-27T17:25:35.833776",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((280, 7), (120, 7), (280,), (120,))"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check shape of train and test sample\n",
    "X_train.shape, X_test.shape, y_train.shape, y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a4367b3e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:35.879297Z",
     "iopub.status.busy": "2024-06-27T17:25:35.878769Z",
     "iopub.status.idle": "2024-06-27T17:25:36.016358Z",
     "shell.execute_reply": "2024-06-27T17:25:36.014950Z"
    },
    "papermill": {
     "duration": 0.151562,
     "end_time": "2024-06-27T17:25:36.019894",
     "exception": false,
     "start_time": "2024-06-27T17:25:35.868332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    " #Step 5 : select model\n",
    "from sklearn.linear_model import LinearRegression\n",
    "model = LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f925e172",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.042428Z",
     "iopub.status.busy": "2024-06-27T17:25:36.041009Z",
     "iopub.status.idle": "2024-06-27T17:25:36.082925Z",
     "shell.execute_reply": "2024-06-27T17:25:36.081379Z"
    },
    "papermill": {
     "duration": 0.056505,
     "end_time": "2024-06-27T17:25:36.086388",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.029883",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 6 : train or fit model\n",
    "model.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "ce92d3b2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.109368Z",
     "iopub.status.busy": "2024-06-27T17:25:36.108902Z",
     "iopub.status.idle": "2024-06-27T17:25:36.117512Z",
     "shell.execute_reply": "2024-06-27T17:25:36.116236Z"
    },
    "papermill": {
     "duration": 0.024368,
     "end_time": "2024-06-27T17:25:36.120338",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.095970",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1.2831244932033998"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.intercept_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0877b2dc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.142094Z",
     "iopub.status.busy": "2024-06-27T17:25:36.141641Z",
     "iopub.status.idle": "2024-06-27T17:25:36.149890Z",
     "shell.execute_reply": "2024-06-27T17:25:36.148650Z"
    },
    "papermill": {
     "duration": 0.022369,
     "end_time": "2024-06-27T17:25:36.152732",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.130363",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0.00204057,  0.00287273,  0.00566887, -0.00380559,  0.01973175,\n",
       "        0.11314449,  0.02061553])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "dae0e711",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.174423Z",
     "iopub.status.busy": "2024-06-27T17:25:36.173960Z",
     "iopub.status.idle": "2024-06-27T17:25:36.182356Z",
     "shell.execute_reply": "2024-06-27T17:25:36.181001Z"
    },
    "papermill": {
     "duration": 0.022689,
     "end_time": "2024-06-27T17:25:36.185424",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.162735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 7 : predict model\n",
    "y_pred = model.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "b596c7c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.207511Z",
     "iopub.status.busy": "2024-06-27T17:25:36.207055Z",
     "iopub.status.idle": "2024-06-27T17:25:36.216668Z",
     "shell.execute_reply": "2024-06-27T17:25:36.215390Z"
    },
    "papermill": {
     "duration": 0.023295,
     "end_time": "2024-06-27T17:25:36.219285",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.195990",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0.71426327, 0.72534136, 0.69677103, 0.66566584, 0.57483872,\n",
       "       0.93087527, 0.93701113, 0.72361387, 0.81130158, 0.62223963,\n",
       "       0.59629648, 0.80084072, 0.52537944, 0.79174558, 0.84064992,\n",
       "       0.66429594, 0.65136589, 0.66990687, 0.75794085, 0.86072023,\n",
       "       0.66088101, 0.85570763, 0.84777425, 0.95033179, 0.68750762,\n",
       "       0.65907671, 0.65279623, 0.5709259 , 0.55895645, 0.57990205,\n",
       "       0.54497918, 0.7570717 , 0.69682571, 0.77286067, 0.64320811,\n",
       "       0.5183554 , 0.43816818, 0.84654064, 0.90398354, 0.80517781,\n",
       "       0.72218971, 0.72882587, 0.68145136, 0.88592237, 0.77208852,\n",
       "       0.78778085, 0.95526121, 0.88586486, 0.59980416, 0.50690214,\n",
       "       0.59947098, 0.63380406, 0.82841217, 0.44911724, 0.71068577,\n",
       "       0.77335748, 0.68851557, 0.64486026, 0.85537724, 0.65517768,\n",
       "       0.65046031, 0.90818978, 0.63422429, 0.68658606, 0.72150268,\n",
       "       0.69030545, 0.59381287, 0.93813035, 0.58997351, 0.91542587,\n",
       "       0.59283415, 0.93351713, 0.59478751, 0.71380389, 0.54346237,\n",
       "       0.84710913, 0.6084418 , 0.7257337 , 0.67545704, 0.81387503,\n",
       "       0.70259527, 0.88600461, 0.67084016, 0.53064995, 0.77790726,\n",
       "       0.65780713, 0.78970635, 0.54709634, 0.77924705, 0.66750436,\n",
       "       0.69363338, 0.69891086, 0.92185813, 0.70469056, 0.62554306,\n",
       "       0.62208829, 0.73828086, 0.67369114, 0.76391913, 0.61985049,\n",
       "       0.92865957, 0.70430038, 0.9828821 , 0.82502993, 0.78261009,\n",
       "       0.83438446, 0.66840368, 0.70165011, 0.64534281, 0.5715406 ,\n",
       "       0.80739359, 0.69273815, 0.80585447, 0.6102703 , 0.54641206,\n",
       "       0.76301749, 0.71080317, 0.6261331 , 0.83951248, 0.68578269])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5b9ef889",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.242038Z",
     "iopub.status.busy": "2024-06-27T17:25:36.241358Z",
     "iopub.status.idle": "2024-06-27T17:25:36.247719Z",
     "shell.execute_reply": "2024-06-27T17:25:36.246299Z"
    },
    "papermill": {
     "duration": 0.021458,
     "end_time": "2024-06-27T17:25:36.250492",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.229034",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Step 8 : model accuracy\n",
    "from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "812bab3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.272704Z",
     "iopub.status.busy": "2024-06-27T17:25:36.272223Z",
     "iopub.status.idle": "2024-06-27T17:25:36.281741Z",
     "shell.execute_reply": "2024-06-27T17:25:36.280323Z"
    },
    "papermill": {
     "duration": 0.024399,
     "end_time": "2024-06-27T17:25:36.284829",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.260430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.04400128934232651"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_absolute_error(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7e24a248",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.307810Z",
     "iopub.status.busy": "2024-06-27T17:25:36.307348Z",
     "iopub.status.idle": "2024-06-27T17:25:36.317144Z",
     "shell.execute_reply": "2024-06-27T17:25:36.315820Z"
    },
    "papermill": {
     "duration": 0.024783,
     "end_time": "2024-06-27T17:25:36.320280",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.295497",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.07575278864605438"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_absolute_percentage_error(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8b1026c5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-27T17:25:36.344573Z",
     "iopub.status.busy": "2024-06-27T17:25:36.344111Z",
     "iopub.status.idle": "2024-06-27T17:25:36.354821Z",
     "shell.execute_reply": "2024-06-27T17:25:36.353061Z"
    },
    "papermill": {
     "duration": 0.025306,
     "end_time": "2024-06-27T17:25:36.357663",
     "exception": false,
     "start_time": "2024-06-27T17:25:36.332357",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.004038263715495693"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test,y_pred)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5267644,
     "sourceId": 8766492,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.530684,
   "end_time": "2024-06-27T17:25:37.094706",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-27T17:25:28.564022",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
